// Code generated by "stringer -type HWVersion,ErrT,ReasonForUpdateT,ReasonForUpdateExtension1T,DbgLvlT -output api_string.go"; DO NOT EDIT.

package api

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RSP1_ID-1]
	_ = x[RSP1A_ID-255]
	_ = x[RSP2_ID-2]
	_ = x[RSPduo_ID-3]
	_ = x[RSPdx_ID-4]
}

const (
	_HWVersion_name_0 = "RSP1_IDRSP2_IDRSPduo_IDRSPdx_ID"
	_HWVersion_name_1 = "RSP1A_ID"
)

var (
	_HWVersion_index_0 = [...]uint8{0, 7, 14, 23, 31}
)

func (i HWVersion) String() string {
	switch {
	case 1 <= i && i <= 4:
		i -= 1
		return _HWVersion_name_0[_HWVersion_index_0[i]:_HWVersion_index_0[i+1]]
	case i == 255:
		return _HWVersion_name_1
	default:
		return "HWVersion(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Success-0]
	_ = x[Fail-1]
	_ = x[InvalidParam-2]
	_ = x[OutOfRange-3]
	_ = x[GainUpdateError-4]
	_ = x[RfUpdateError-5]
	_ = x[FsUpdateError-6]
	_ = x[HwError-7]
	_ = x[AliasingError-8]
	_ = x[AlreadyInitialised-9]
	_ = x[NotInitialised-10]
	_ = x[NotEnabled-11]
	_ = x[HwVerError-12]
	_ = x[OutOfMemError-13]
	_ = x[ServiceNotResponding-14]
	_ = x[StartPending-15]
	_ = x[StopPending-16]
	_ = x[InvalidMode-17]
	_ = x[FailedVerification1-18]
	_ = x[FailedVerification2-19]
	_ = x[FailedVerification3-20]
	_ = x[FailedVerification4-21]
	_ = x[FailedVerification5-22]
	_ = x[FailedVerification6-23]
	_ = x[InvalidServiceVersion-24]
}

const _ErrT_name = "SuccessFailInvalidParamOutOfRangeGainUpdateErrorRfUpdateErrorFsUpdateErrorHwErrorAliasingErrorAlreadyInitialisedNotInitialisedNotEnabledHwVerErrorOutOfMemErrorServiceNotRespondingStartPendingStopPendingInvalidModeFailedVerification1FailedVerification2FailedVerification3FailedVerification4FailedVerification5FailedVerification6InvalidServiceVersion"

var _ErrT_index = [...]uint16{0, 7, 11, 23, 33, 48, 61, 74, 81, 94, 112, 126, 136, 146, 159, 179, 191, 202, 213, 232, 251, 270, 289, 308, 327, 348}

func (i ErrT) String() string {
	if i < 0 || i >= ErrT(len(_ErrT_index)-1) {
		return "ErrT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ErrT_name[_ErrT_index[i]:_ErrT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Update_None-0]
	_ = x[Update_Dev_Fs-1]
	_ = x[Update_Dev_Ppm-2]
	_ = x[Update_Dev_SyncUpdate-4]
	_ = x[Update_Dev_ResetFlags-8]
	_ = x[Update_Rsp1a_BiasTControl-16]
	_ = x[Update_Rsp1a_RfNotchControl-32]
	_ = x[Update_Rsp1a_RfDabNotchControl-64]
	_ = x[Update_Rsp2_BiasTControl-128]
	_ = x[Update_Rsp2_AmPortSelect-256]
	_ = x[Update_Rsp2_AntennaControl-512]
	_ = x[Update_Rsp2_RfNotchControl-1024]
	_ = x[Update_Rsp2_ExtRefControl-2048]
	_ = x[Update_RspDuo_ExtRefControl-4096]
	_ = x[Update_Master_Spare_1-8192]
	_ = x[Update_Master_Spare_2-16384]
	_ = x[Update_Tuner_Gr-32768]
	_ = x[Update_Tuner_GrLimits-65536]
	_ = x[Update_Tuner_Frf-131072]
	_ = x[Update_Tuner_BwType-262144]
	_ = x[Update_Tuner_IfType-524288]
	_ = x[Update_Tuner_DcOffset-1048576]
	_ = x[Update_Tuner_LoMode-2097152]
	_ = x[Update_Ctrl_DCoffsetIQimbalance-4194304]
	_ = x[Update_Ctrl_Decimation-8388608]
	_ = x[Update_Ctrl_Agc-16777216]
	_ = x[Update_Ctrl_AdsbMode-33554432]
	_ = x[Update_Ctrl_OverloadMsgAck-67108864]
	_ = x[Update_RspDuo_BiasTControl-134217728]
	_ = x[Update_RspDuo_AmPortSelect-268435456]
	_ = x[Update_RspDuo_Tuner1AmNotchControl-536870912]
	_ = x[Update_RspDuo_RfNotchControl-1073741824]
	_ = x[Update_RspDuo_RfDabNotchControl-2147483648]
}

const _ReasonForUpdateT_name = "Update_NoneUpdate_Dev_FsUpdate_Dev_PpmUpdate_Dev_SyncUpdateUpdate_Dev_ResetFlagsUpdate_Rsp1a_BiasTControlUpdate_Rsp1a_RfNotchControlUpdate_Rsp1a_RfDabNotchControlUpdate_Rsp2_BiasTControlUpdate_Rsp2_AmPortSelectUpdate_Rsp2_AntennaControlUpdate_Rsp2_RfNotchControlUpdate_Rsp2_ExtRefControlUpdate_RspDuo_ExtRefControlUpdate_Master_Spare_1Update_Master_Spare_2Update_Tuner_GrUpdate_Tuner_GrLimitsUpdate_Tuner_FrfUpdate_Tuner_BwTypeUpdate_Tuner_IfTypeUpdate_Tuner_DcOffsetUpdate_Tuner_LoModeUpdate_Ctrl_DCoffsetIQimbalanceUpdate_Ctrl_DecimationUpdate_Ctrl_AgcUpdate_Ctrl_AdsbModeUpdate_Ctrl_OverloadMsgAckUpdate_RspDuo_BiasTControlUpdate_RspDuo_AmPortSelectUpdate_RspDuo_Tuner1AmNotchControlUpdate_RspDuo_RfNotchControlUpdate_RspDuo_RfDabNotchControl"

var _ReasonForUpdateT_map = map[ReasonForUpdateT]string{
	0:          _ReasonForUpdateT_name[0:11],
	1:          _ReasonForUpdateT_name[11:24],
	2:          _ReasonForUpdateT_name[24:38],
	4:          _ReasonForUpdateT_name[38:59],
	8:          _ReasonForUpdateT_name[59:80],
	16:         _ReasonForUpdateT_name[80:105],
	32:         _ReasonForUpdateT_name[105:132],
	64:         _ReasonForUpdateT_name[132:162],
	128:        _ReasonForUpdateT_name[162:186],
	256:        _ReasonForUpdateT_name[186:210],
	512:        _ReasonForUpdateT_name[210:236],
	1024:       _ReasonForUpdateT_name[236:262],
	2048:       _ReasonForUpdateT_name[262:287],
	4096:       _ReasonForUpdateT_name[287:314],
	8192:       _ReasonForUpdateT_name[314:335],
	16384:      _ReasonForUpdateT_name[335:356],
	32768:      _ReasonForUpdateT_name[356:371],
	65536:      _ReasonForUpdateT_name[371:392],
	131072:     _ReasonForUpdateT_name[392:408],
	262144:     _ReasonForUpdateT_name[408:427],
	524288:     _ReasonForUpdateT_name[427:446],
	1048576:    _ReasonForUpdateT_name[446:467],
	2097152:    _ReasonForUpdateT_name[467:486],
	4194304:    _ReasonForUpdateT_name[486:517],
	8388608:    _ReasonForUpdateT_name[517:539],
	16777216:   _ReasonForUpdateT_name[539:554],
	33554432:   _ReasonForUpdateT_name[554:574],
	67108864:   _ReasonForUpdateT_name[574:600],
	134217728:  _ReasonForUpdateT_name[600:626],
	268435456:  _ReasonForUpdateT_name[626:652],
	536870912:  _ReasonForUpdateT_name[652:686],
	1073741824: _ReasonForUpdateT_name[686:714],
	2147483648: _ReasonForUpdateT_name[714:745],
}

func (i ReasonForUpdateT) String() string {
	if str, ok := _ReasonForUpdateT_map[i]; ok {
		return str
	}
	return "ReasonForUpdateT(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Update_Ext1_None-0]
	_ = x[Update_RspDx_HdrEnable-1]
	_ = x[Update_RspDx_BiasTControl-2]
	_ = x[Update_RspDx_AntennaControl-4]
	_ = x[Update_RspDx_RfNotchControl-8]
	_ = x[Update_RspDx_RfDabNotchControl-16]
	_ = x[Update_RspDx_HdrBw-32]
}

const (
	_ReasonForUpdateExtension1T_name_0 = "Update_Ext1_NoneUpdate_RspDx_HdrEnableUpdate_RspDx_BiasTControl"
	_ReasonForUpdateExtension1T_name_1 = "Update_RspDx_AntennaControl"
	_ReasonForUpdateExtension1T_name_2 = "Update_RspDx_RfNotchControl"
	_ReasonForUpdateExtension1T_name_3 = "Update_RspDx_RfDabNotchControl"
	_ReasonForUpdateExtension1T_name_4 = "Update_RspDx_HdrBw"
)

var (
	_ReasonForUpdateExtension1T_index_0 = [...]uint8{0, 16, 38, 63}
)

func (i ReasonForUpdateExtension1T) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _ReasonForUpdateExtension1T_name_0[_ReasonForUpdateExtension1T_index_0[i]:_ReasonForUpdateExtension1T_index_0[i+1]]
	case i == 4:
		return _ReasonForUpdateExtension1T_name_1
	case i == 8:
		return _ReasonForUpdateExtension1T_name_2
	case i == 16:
		return _ReasonForUpdateExtension1T_name_3
	case i == 32:
		return _ReasonForUpdateExtension1T_name_4
	default:
		return "ReasonForUpdateExtension1T(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DbgLvl_Disable-0]
	_ = x[DbgLvl_Verbose-1]
	_ = x[DbgLvl_Warning-2]
	_ = x[DbgLvl_Error-3]
	_ = x[DbgLvl_Message-4]
}

const _DbgLvlT_name = "DbgLvl_DisableDbgLvl_VerboseDbgLvl_WarningDbgLvl_ErrorDbgLvl_Message"

var _DbgLvlT_index = [...]uint8{0, 14, 28, 42, 54, 68}

func (i DbgLvlT) String() string {
	if i < 0 || i >= DbgLvlT(len(_DbgLvlT_index)-1) {
		return "DbgLvlT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DbgLvlT_name[_DbgLvlT_index[i]:_DbgLvlT_index[i+1]]
}
