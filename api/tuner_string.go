// Code generated by "stringer -type Bw_MHzT,If_kHzT,LoModeT,MinGainReductionT,TunerSelectT -output tuner_string.go"; DO NOT EDIT.

package api

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BW_Undefined-0]
	_ = x[BW_0_200-200]
	_ = x[BW_0_300-300]
	_ = x[BW_0_600-600]
	_ = x[BW_1_536-1536]
	_ = x[BW_5_000-5000]
	_ = x[BW_6_000-6000]
	_ = x[BW_7_000-7000]
	_ = x[BW_8_000-8000]
}

const (
	_Bw_MHzT_name_0 = "BW_Undefined"
	_Bw_MHzT_name_1 = "BW_0_200"
	_Bw_MHzT_name_2 = "BW_0_300"
	_Bw_MHzT_name_3 = "BW_0_600"
	_Bw_MHzT_name_4 = "BW_1_536"
	_Bw_MHzT_name_5 = "BW_5_000"
	_Bw_MHzT_name_6 = "BW_6_000"
	_Bw_MHzT_name_7 = "BW_7_000"
	_Bw_MHzT_name_8 = "BW_8_000"
)

func (i Bw_MHzT) String() string {
	switch {
	case i == 0:
		return _Bw_MHzT_name_0
	case i == 200:
		return _Bw_MHzT_name_1
	case i == 300:
		return _Bw_MHzT_name_2
	case i == 600:
		return _Bw_MHzT_name_3
	case i == 1536:
		return _Bw_MHzT_name_4
	case i == 5000:
		return _Bw_MHzT_name_5
	case i == 6000:
		return _Bw_MHzT_name_6
	case i == 7000:
		return _Bw_MHzT_name_7
	case i == 8000:
		return _Bw_MHzT_name_8
	default:
		return "Bw_MHzT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IF_Undefined - -1]
	_ = x[IF_Zero-0]
	_ = x[IF_0_450-450]
	_ = x[IF_1_620-1620]
	_ = x[IF_2_048-2048]
}

const (
	_If_kHzT_name_0 = "IF_UndefinedIF_Zero"
	_If_kHzT_name_1 = "IF_0_450"
	_If_kHzT_name_2 = "IF_1_620"
	_If_kHzT_name_3 = "IF_2_048"
)

var (
	_If_kHzT_index_0 = [...]uint8{0, 12, 19}
)

func (i If_kHzT) String() string {
	switch {
	case -1 <= i && i <= 0:
		i -= -1
		return _If_kHzT_name_0[_If_kHzT_index_0[i]:_If_kHzT_index_0[i+1]]
	case i == 450:
		return _If_kHzT_name_1
	case i == 1620:
		return _If_kHzT_name_2
	case i == 2048:
		return _If_kHzT_name_3
	default:
		return "If_kHzT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LO_Undefined-0]
	_ = x[LO_Auto-1]
	_ = x[LO_120MHz-2]
	_ = x[LO_144MHz-3]
	_ = x[LO_168MHz-4]
}

const _LoModeT_name = "LO_UndefinedLO_AutoLO_120MHzLO_144MHzLO_168MHz"

var _LoModeT_index = [...]uint8{0, 12, 19, 28, 37, 46}

func (i LoModeT) String() string {
	if i < 0 || i >= LoModeT(len(_LoModeT_index)-1) {
		return "LoModeT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LoModeT_name[_LoModeT_index[i]:_LoModeT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTENDED_MIN_GR-0]
	_ = x[NORMAL_MIN_GR-20]
}

const (
	_MinGainReductionT_name_0 = "EXTENDED_MIN_GR"
	_MinGainReductionT_name_1 = "NORMAL_MIN_GR"
)

func (i MinGainReductionT) String() string {
	switch {
	case i == 0:
		return _MinGainReductionT_name_0
	case i == 20:
		return _MinGainReductionT_name_1
	default:
		return "MinGainReductionT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Tuner_Neither-0]
	_ = x[Tuner_A-1]
	_ = x[Tuner_B-2]
	_ = x[Tuner_Both-3]
}

const _TunerSelectT_name = "Tuner_NeitherTuner_ATuner_BTuner_Both"

var _TunerSelectT_index = [...]uint8{0, 13, 20, 27, 37}

func (i TunerSelectT) String() string {
	if i < 0 || i >= TunerSelectT(len(_TunerSelectT_index)-1) {
		return "TunerSelectT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TunerSelectT_name[_TunerSelectT_index[i]:_TunerSelectT_index[i+1]]
}
