// Code generated by "stringer -type AgcControlT,AdsbModeT -output control_string.go"; DO NOT EDIT.

package api

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AGC_DISABLE-0]
	_ = x[AGC_100HZ-1]
	_ = x[AGC_50HZ-2]
	_ = x[AGC_5HZ-3]
	_ = x[AGC_CTRL_EN-4]
}

const _AgcControlT_name = "AGC_DISABLEAGC_100HZAGC_50HZAGC_5HZAGC_CTRL_EN"

var _AgcControlT_index = [...]uint8{0, 11, 20, 28, 35, 46}

func (i AgcControlT) String() string {
	if i < 0 || i >= AgcControlT(len(_AgcControlT_index)-1) {
		return "AgcControlT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AgcControlT_name[_AgcControlT_index[i]:_AgcControlT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ADSB_DECIMATION-0]
	_ = x[ADSB_NO_DECIMATION_LOWPASS-1]
	_ = x[ADSB_NO_DECIMATION_BANDPASS_2MHZ-2]
	_ = x[ADSB_NO_DECIMATION_BANDPASS_3MHZ-3]
}

const _AdsbModeT_name = "ADSB_DECIMATIONADSB_NO_DECIMATION_LOWPASSADSB_NO_DECIMATION_BANDPASS_2MHZADSB_NO_DECIMATION_BANDPASS_3MHZ"

var _AdsbModeT_index = [...]uint8{0, 15, 41, 73, 105}

func (i AdsbModeT) String() string {
	if i < 0 || i >= AdsbModeT(len(_AdsbModeT_index)-1) {
		return "AdsbModeT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AdsbModeT_name[_AdsbModeT_index[i]:_AdsbModeT_index[i+1]]
}
